type MyMaybe a = MyJust a | MyNothing;

type EnumZ4 = Zero | One | Two | Three | Error;

f enum = match enum with {
    Zero -> MyJust 0;
    One -> MyJust 1;
    Two -> MyJust 2;
    Three -> MyJust 3;
    Error -> MyNothing;
};

main = let {
    a = f Zero;
    b = f Error;
} in match a with {
    MyJust x -> match b with {
        MyNothing -> x == 0;
        _ -> False;
    };
    _ -> False;
};
