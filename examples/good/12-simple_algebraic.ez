type Maybe a = Just a | Nothing;

type EnumZ4 = Zero | One | Two | Three | Error;

f : EnumZ4 -> Maybe Int;
f enum = match enum with {
    Zero -> Just 0;
    One -> Just 1;
    Two -> Just 2;
    Three -> Just 3;
    Error -> Nothing;
};

main : Bool;
main = let {
    a = f Zero;
    b = f Error;
} in match a with {
    Just x -> match b with {
        Nothing -> x == 0;
        _ -> False;
    };
    _ -> False;
};
